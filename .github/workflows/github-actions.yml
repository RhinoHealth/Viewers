name: CI
on: push

jobs:
  build:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Check out code
        uses: actions/checkout@v2
      - name: Extract short commit sha
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        id: extract_sha
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr -d '[:punct:]' | head -c 128)"
        id: extract_branch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Image and Push to Amazon ECR
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rhino-viewer
          IMAGE_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          IMAGE_TAG: ${{ steps.extract_sha.outputs.sha_short }}
        with:
          context: ./rhinoCloud
          push: true
          build-args: |
            build_id=${{ github.sha }}
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_BRANCH }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          cache-to: type=inline
